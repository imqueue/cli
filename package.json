{
  "name": "@imqueue/cli",
  "version": "1.11.3",
  "description": "Command Line Interface for IMQ",
  "keywords": [
    "command-line-tool",
    "cli",
    "rpc-client",
    "rpc-service",
    "rpc",
    "rad",
    "message-queue",
    "redis-queue"
  ],
  "scripts": {
    "prepublishOnly": "./node_modules/.bin/tsc",
    "postinstall": "([ -z \"$TRAVIS\" ] && (node index config check || node index config init)) || exit 0",
    "test": "./node_modules/.bin/tsc && ./node_modules/.bin/nyc mocha && ./node_modules/.bin/nyc report --reporter=text-lcov && npm run test-coverage",
    "test-fast": "./node_modules/.bin/tsc && ./node_modules/.bin/nyc mocha ; /usr/bin/env node -e \"require('open')('file://`pwd`/coverage/index.html', { wait: false });\"",
    "test-local": "export COVERALLS_REPO_TOKEN=$IMQ_CLI_COVERALLS_TOKEN && npm test ; /usr/bin/env node -e \"require('open')('https://coveralls.io/github/imqueue/imq-rpc', { wait: false });\"",
    "test-coverage": "cat ./coverage/lcov.info | CODECLIMATE_API_HOST=https://codebeat.co/webhooks/code_coverage CODECLIMATE_REPO_TOKEN=bafe0c12-51c6-4419-b671-cf107b5293e3 ./node_modules/.bin/codeclimate-test-reporter",
    "clean-typedefs": "find . -name '*.d.ts' -not -wholename '*node_modules*' -not -wholename '*generator*' -type f -delete",
    "clean-maps": "find . -name '*.js.map' -not -wholename '*node_modules*' -not -wholename '*generator*' -type f -delete",
    "clean-js": "find . -name '*.js' -not -wholename '*node_modules*' -not -wholename '*generator*' -type f -delete",
    "clean-tests": "rm -rf .nyc_output coverage",
    "clean-doc": "rm -rf docs",
    "clean-benchmark": "rm -rf benchmark-result",
    "clean": "npm run clean-tests && npm run clean-typedefs && npm run clean-maps && npm run clean-js && npm run clean-doc && npm run clean-benchmark",
    "doc": "rm -rf docs && typedoc --excludePrivate --excludeExternals --hideGenerator --exclude \"**/+(debug|test|node_modules|docs|coverage|benchmark|.nyc_output)/**/*\" --mode file --out ./docs . && /usr/bin/env node -e \"require('open')('file://`pwd`/docs/index.html', { wait: false });\""
  },
  "repository": {
    "type": "git",
    "url": "git@github.com/imqueue/cli.git"
  },
  "bugs": {
    "url": "https://github.com/imqueue/cli/issues"
  },
  "homepage": "https://imqueue.com/",
  "author": "imqueue.com <support@imqueue.com> (https://imqueue.com)",
  "license": "ISC",
  "dependencies": {
    "@imqueue/core": "^1.8.1",
    "@imqueue/rpc": "^1.11.1",
    "@imqueue/travis": "^1.0.1",
    "@octokit/rest": "16.42.2",
    "chalk": "^4.1.0",
    "command-exists": "^1.2.9",
    "dotenv": "^8.2.0",
    "inquirer": "^7.3.3",
    "inquirer-autocomplete-prompt": "^1.3.0",
    "node-rsa": "^1.1.1",
    "request": "^2.88.2",
    "semver": "^7.3.2",
    "word-wrap": "^1.2.3",
    "yargs": "^16.1.0"
  },
  "preferGlobal": true,
  "devDependencies": {
    "@types/chai": "^4.2.14",
    "@types/inquirer": "^7.3.1",
    "@types/mocha": "^8.0.3",
    "@types/mock-require": "^2.0.0",
    "@types/node": "^14.14.6",
    "@types/node-rsa": "^1.0.0",
    "@types/request": "^2.48.5",
    "@types/semver": "^7.3.4",
    "@types/sinon": "^9.0.8",
    "@types/yargs": "^15.0.9",
    "chai": "^4.2.0",
    "codeclimate-test-reporter": "^0.5.1",
    "coveralls": "^3.1.0",
    "minimist": "^1.2.5",
    "mocha": "^8.2.1",
    "mocha-lcov-reporter": "^1.3.0",
    "mock-require": "^3.0.3",
    "nyc": "^15.1.0",
    "open": "^7.3.0",
    "reflect-metadata": "^0.1.13",
    "sinon": "^9.2.1",
    "source-map-support": "^0.5.19",
    "ts-node": "^9.0.0",
    "typedoc": "^0.19.2",
    "typescript": "^4.0.5"
  },
  "main": "index.js",
  "bin": {
    "imq": "index.js",
    "imqctl": "bin/ctl.sh",
    "imqlog": "bin/log.sh",
    "imqup": "bin/updep.sh"
  },
  "typescript": {
    "definitions": "index.d.ts"
  },
  "mocha": {
    "require": [
      "ts-node/register",
      "source-map-support/register"
    ],
    "recursive": true,
    "bail": true,
    "full-trace": true
  },
  "nyc": {
    "check-coverage": false,
    "extension": [
      ".ts"
    ],
    "exclude": [
      "**/*.d.ts",
      "**/test/**"
    ],
    "require": [
      "ts-node/register"
    ],
    "reporter": [
      "html",
      "text",
      "text-summary",
      "lcovonly"
    ]
  }
}
